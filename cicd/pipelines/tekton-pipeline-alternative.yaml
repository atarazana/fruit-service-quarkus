---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: fruit-service-source-plr
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: fruit-service-cache-plr
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: fruit-service
    version: 1.0.0
    group: com.redhat.atomic.fruit
  name: fruit-service-postgresql-db
stringData:
  DB_USER: luke
  DB_PASSWORD: secret
  DB_NAME: FRUITSDB
  DB_HOST: postgresql-db
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: fruit-service-alternative-kn
  labels:
    app.kubernetes.io/instance: fruit-service-alternative-kn
    pipeline.openshift.io/runtime: quarkus
    pipeline.openshift.io/type: knative
spec:
  params:
    - name: APP_NAME
      type: string
      default: fruit-service-alternative-kn
    - name: GIT_REPO
      type: string
      default: 'https://github.com/atarazana/fruit-service-quarkus'
    - name: GIT_REVISION
      type: string
      default: main
    - name: IMAGE_NAME
      type: string
      default: image-registry.openshift-image-registry.svc:5000/<project>/fruit-service-alternative-kn
    - name: PATH_CONTEXT
      type: string
      default: .
    - name: QUARKUS_PROFILE
      type: string
      default: prod
    - name: DB_SECRET_NAME
      type: string
      default: fruit-service-postgresql-db
    - name: DB_HOST
      type: string
      default: postgresql-db
    - name: REVISION_NAME
      type: string
  tasks:
    - name: fetch-repository
      params:
        - name: url
          value: $(params.GIT_REPO)
        - name: revision
          value: $(params.GIT_REVISION)
        - name: deleteExisting
          value: 'true'
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: workspace-source
    - name: package
      params:
        - name: PATH_CONTEXT
          value: $(params.PATH_CONTEXT)
      runAfter:
        - fetch-repository
      taskRef:
        kind: ClusterTask
        name: quarkus-package
      workspaces:
        - name: source
          workspace: workspace-source
        - name: cache
          workspace: workspace-cache
    - name: build
      params:
        - name: IMAGE
          value: $(params.IMAGE_NAME)
        - name: TLSVERIFY
          value: 'false'
        - name: PATH_CONTEXT
          value: $(params.PATH_CONTEXT)
        - name: DOCKERFILE_PATH
          value: './src/main/docker/Dockerfile.jvm'
      runAfter:
        - package
      taskRef:
        kind: ClusterTask
        name: buildah-custom-build
      workspaces:
        - name: source
          workspace: workspace-source
    - name: kn-service-create
      params:
        - name: ARGS
          value:
            - service
            - create
            - $(params.APP_NAME)
            - '--image=$(params.IMAGE_NAME)'
            - '--env'
            - 'QUARKUS_PROFILE=$(params.QUARKUS_PROFILE)'
            - '--env'
            - 'DB_HOST=$(params.DB_HOST)'
            - '--env-from'
            - 'secret:$(params.DB_SECRET_NAME)'
            - '--revision-name'
            - '{{.Service}}-$(params.REVISION_NAME)'
            - '--force'
      runAfter:
        - build
      taskRef:
        kind: ClusterTask
        name: kn
  workspaces:
    - name: workspace-source
    - name: workspace-cache
